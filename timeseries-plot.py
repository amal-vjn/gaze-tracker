import matplotlib.pyplot as plt
from datetime import datetime
from collections import defaultdict

# Original data
data = [
((329, 230), "2025-05-25 14:27:06.820839"),
((328, 231), "2025-05-25 14:27:07.275060"),
((334, 231), "2025-05-25 14:27:07.688303"),
((347, 235), "2025-05-25 14:27:08.118118"),
((353, 234), "2025-05-25 14:27:08.548026"),
((353, 233), "2025-05-25 14:27:08.968758"),
((351, 233), "2025-05-25 14:27:09.398669"),
((352, 232), "2025-05-25 14:27:09.826376"),
((354, 233), "2025-05-25 14:27:10.254167"),
((355, 233), "2025-05-25 14:27:10.678796"),
((356, 233), "2025-05-25 14:27:11.103088"),
((356, 233), "2025-05-25 14:27:11.536052"),
((357, 233), "2025-05-25 14:27:11.958622"),
((361, 234), "2025-05-25 14:27:12.386346"),
((364, 235), "2025-05-25 14:27:12.815617"),
((364, 235), "2025-05-25 14:27:13.240356"),
((361, 235), "2025-05-25 14:27:13.666102"),
((357, 235), "2025-05-25 14:27:14.092171"),
((353, 234), "2025-05-25 14:27:14.519215"),
((350, 234), "2025-05-25 14:27:14.948778"),
((347, 233), "2025-05-25 14:27:15.372507"),
((344, 233), "2025-05-25 14:27:15.797840"),
((339, 232), "2025-05-25 14:27:16.226471"),
((335, 232), "2025-05-25 14:27:16.655106"),
((333, 232), "2025-05-25 14:27:17.080324"),
((331, 232), "2025-05-25 14:27:17.506633"),
((331, 232), "2025-05-25 14:27:17.934981"),
((332, 230), "2025-05-25 14:27:18.358555"),
((333, 230), "2025-05-25 14:27:18.783473"),
((332, 231), "2025-05-25 14:27:19.215772"),
((331, 232), "2025-05-25 14:27:19.637658"),
((330, 232), "2025-05-25 14:27:20.066358"),
((329, 233), "2025-05-25 14:27:20.493962"),
((328, 233), "2025-05-25 14:27:20.919406"),
((330, 233), "2025-05-25 14:27:21.343628"),
((334, 233), "2025-05-25 14:27:21.775279"),
((339, 233), "2025-05-25 14:27:22.199274"),
((343, 233), "2025-05-25 14:27:22.627426"),
((348, 234), "2025-05-25 14:27:23.050878"),
((351, 235), "2025-05-25 14:27:23.478325"),
((352, 235), "2025-05-25 14:27:23.906851"),
((353, 235), "2025-05-25 14:27:24.328735"),
((353, 235), "2025-05-25 14:27:24.758861"),
((354, 235), "2025-05-25 14:27:25.185836"),
((354, 235), "2025-05-25 14:27:25.615283"),
((354, 235), "2025-05-25 14:27:26.037880"),
((355, 235), "2025-05-25 14:27:26.463762"),
((356, 236), "2025-05-25 14:27:26.894852"),
((356, 236), "2025-05-25 14:27:27.315207"),
((357, 235), "2025-05-25 14:27:27.743413"),
((358, 235), "2025-05-25 14:27:28.174512"),
((359, 235), "2025-05-25 14:27:28.598202"),
((360, 234), "2025-05-25 14:27:29.025211"),
((360, 234), "2025-05-25 14:27:29.455799"),
((361, 234), "2025-05-25 14:27:29.880388"),
((361, 234), "2025-05-25 14:27:30.306512"),
((361, 233), "2025-05-25 14:27:30.735640"),
((362, 234), "2025-05-25 14:27:31.159839"),
((361, 233), "2025-05-25 14:27:31.586944"),
((358, 234), "2025-05-25 14:27:32.016298"),
((356, 234), "2025-05-25 14:27:32.438084"),
((353, 234), "2025-05-25 14:27:32.867083"),
((349, 234), "2025-05-25 14:27:33.295969"),
((348, 235), "2025-05-25 14:27:33.720196"),
((347, 235), "2025-05-25 14:27:34.147029"),
((348, 235), "2025-05-25 14:27:34.575975"),
((347, 235), "2025-05-25 14:27:34.993636"),
((346, 234), "2025-05-25 14:27:35.395664"),
((345, 233), "2025-05-25 14:27:35.814666"),
((345, 232), "2025-05-25 14:27:36.246310"),
((345, 232), "2025-05-25 14:27:36.673350"),
((346, 232), "2025-05-25 14:27:37.100914"),
((347, 231), "2025-05-25 14:27:37.528215"),
((346, 231), "2025-05-25 14:27:37.955682"),
((345, 232), "2025-05-25 14:27:38.380762"),
((344, 232), "2025-05-25 14:27:38.807501"),
((343, 233), "2025-05-25 14:27:39.236817"),
((343, 233), "2025-05-25 14:27:39.658407"),
((343, 233), "2025-05-25 14:27:40.088117"),
((343, 233), "2025-05-25 14:27:40.515378"),
((342, 233), "2025-05-25 14:27:40.939604"),
((341, 233), "2025-05-25 14:27:41.367602"),
((341, 234), "2025-05-25 14:27:41.796068"),
((341, 234), "2025-05-25 14:27:42.219410"),
((342, 234), "2025-05-25 14:27:42.647893"),
((342, 233), "2025-05-25 14:27:43.075590"),
((341, 233), "2025-05-25 14:27:43.495301"),
((341, 232), "2025-05-25 14:27:43.895745"),
((341, 232), "2025-05-25 14:27:44.313921"),
((341, 232), "2025-05-25 14:27:44.715855"),
((341, 232), "2025-05-25 14:27:45.139154"),
((341, 232), "2025-05-25 14:27:45.563825"),
((342, 232), "2025-05-25 14:27:45.965233"),
((342, 232), "2025-05-25 14:27:46.386394"),
((340, 231), "2025-05-25 14:27:46.810188"),
((341, 231), "2025-05-25 14:27:47.243037"),
((339, 231), "2025-05-25 14:27:47.667463"),
((365, 251), "2025-05-25 14:27:48.096874"),
((371, 257), "2025-05-25 14:27:48.523152"),
]

# Group entries by each second
grouped_by_second = defaultdict(list)
for (coords, timestamp) in data:
    t = datetime.strptime(timestamp, "%Y-%m-%d %H:%M:%S.%f")
    rounded_time = t.replace(microsecond=0)
    grouped_by_second[rounded_time].append(coords)

# Create subplots for every 5 seconds
# First, calculate time intervals for 5-second windows
sorted_seconds = sorted(grouped_by_second)

# Group entries by 5-second intervals
grouped_by_5_seconds = defaultdict(list)
for i, second in enumerate(sorted_seconds):
    group_time = second.replace(second=second.second // 5 * 5)  # Round to nearest 5 seconds
    grouped_by_5_seconds[group_time].extend(grouped_by_second[second])

# Plot x vs y for each 5-second interval
plt.figure(figsize=(10, 50))
for idx, group_time in enumerate(sorted(grouped_by_5_seconds)):
    xs, ys = zip(*grouped_by_5_seconds[group_time])
    plt.subplot(len(grouped_by_5_seconds), 1, idx + 1)
    plt.plot(xs, ys, marker='o')
    plt.title(f'Coordinates for {group_time}')
    plt.xlabel('X Coordinate')
    plt.ylabel('Y Coordinate')
    plt.grid(True)

plt.subplots_adjust(hspace=0.5)
plt.savefig("time_series_plot.png")
print("Plot saved as 'time_series_plot.png'")